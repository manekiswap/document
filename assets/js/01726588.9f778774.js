"use strict";(self.webpackChunk_manekiswap_document=self.webpackChunk_manekiswap_document||[]).push([[1230],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),l=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(u.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=l(n),d=a,k=p["".concat(u,".").concat(d)]||p[d]||m[d]||o;return n?r.createElement(k,s(s({ref:t},c),{},{components:n})):r.createElement(k,s({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=p;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var l=2;l<o;l++)s[l]=n[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},9203:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return u},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return m},default:function(){return k}});var r,a=n(7462),o=n(3366),s=(n(7294),n(3905)),i=["components"],u={title:"Library",tags:["smart-contracts","documentation"]},l="Code",c={unversionedId:"reference/smart-contracts/library",id:"reference/smart-contracts/library",isDocsHomePage:!1,title:"Library",description:"UniswapV2Library.sol",source:"@site/docs/reference/smart-contracts/04-library.md",sourceDirName:"reference/smart-contracts",slug:"/reference/smart-contracts/library",permalink:"/reference/smart-contracts/library",editUrl:"https://github.com/manekiswap/manekiswap.github.io/edit/master/docs/reference/smart-contracts/04-library.md",tags:[{label:"smart-contracts",permalink:"/tags/smart-contracts"},{label:"documentation",permalink:"/tags/documentation"}],version:"current",sidebarPosition:4,frontMatter:{title:"Library",tags:["smart-contracts","documentation"]},sidebar:"tutorialSidebar",previous:{title:"Pair (ERC-20)",permalink:"/reference/smart-contracts/pair-erc-20"},next:{title:"Router01",permalink:"/reference/smart-contracts/router01"}},m=[{value:"sortTokens",id:"sorttokens",children:[],level:2},{value:"pairFor",id:"pairfor",children:[],level:2},{value:"getReserves",id:"getreserves",children:[],level:2},{value:"quote",id:"quote",children:[],level:2},{value:"getAmountOut",id:"getamountout",children:[],level:2},{value:"getAmountIn",id:"getamountin",children:[],level:2},{value:"getAmountsOut",id:"getamountsout",children:[],level:2},{value:"getAmountsIn",id:"getamountsin",children:[],level:2}],p=(r="Link",function(e){return console.warn("Component "+r+" was not imported, exported, or provided by MDXProvider as global scope"),(0,s.kt)("div",e)}),d={toc:m};function k(e){var t=e.components,n=(0,o.Z)(e,i);return(0,s.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"code"},"Code"),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/libraries/UniswapV2Library.sol"},(0,s.kt)("inlineCode",{parentName:"a"},"UniswapV2Library.sol"))),(0,s.kt)("h1",{id:"internal-functions"},"Internal Functions"),(0,s.kt)("h2",{id:"sorttokens"},"sortTokens"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-solidity"},"function sortTokens(address tokenA, address tokenB) internal pure returns (address token0, address token1);\n")),(0,s.kt)("p",null,"Sorts token addresses."),(0,s.kt)("h2",{id:"pairfor"},"pairFor"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-solidity"},"function pairFor(address factory, address tokenA, address tokenB) internal pure returns (address pair);\n")),(0,s.kt)("p",null,"Calculates the address for a pair without making any external calls (see ",(0,s.kt)(p,{to:"/docs/v2/javascript-SDK/getting-pair-addresses/",mdxType:"Link"},"Pair Addresses"),")."),(0,s.kt)("h2",{id:"getreserves"},"getReserves"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-solidity"},"function getReserves(address factory, address tokenA, address tokenB) internal view returns (uint reserveA, uint reserveB);\n")),(0,s.kt)("p",null,"Calls ",(0,s.kt)(p,{to:"/docs/v2/smart-contracts/pair#getreserves",mdxType:"Link"},"getReserves")," on the pair for the passed tokens, and returns the results sorted in the order that the parameters were passed in."),(0,s.kt)("h2",{id:"quote"},"quote"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-solidity"},"function quote(uint amountA, uint reserveA, uint reserveB) internal pure returns (uint amountB);\n")),(0,s.kt)("p",null,"Given some asset amount and reserves, returns an amount of the other asset representing equivalent value."),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Useful for calculating optimal token amounts before calling ",(0,s.kt)(p,{to:"/docs/v2/smart-contracts/pair#mint-1",mdxType:"Link"},"mint"),".")),(0,s.kt)("h2",{id:"getamountout"},"getAmountOut"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-solidity"},"function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) internal pure returns (uint amountOut);\n")),(0,s.kt)("p",null,"Given an ",(0,s.kt)("em",{parentName:"p"},"input")," asset amount, returns the maximum ",(0,s.kt)("em",{parentName:"p"},"output")," amount of the other asset (accounting for fees) given reserves."),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Used in ",(0,s.kt)("a",{parentName:"li",href:"#getamountsout"},"getAmountsOut"),".")),(0,s.kt)("h2",{id:"getamountin"},"getAmountIn"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-solidity"},"function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) internal pure returns (uint amountIn);\n")),(0,s.kt)("p",null,"Returns the minimum ",(0,s.kt)("em",{parentName:"p"},"input")," asset amount required to buy the given ",(0,s.kt)("em",{parentName:"p"},"output")," asset amount (accounting for fees) given reserves."),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Used in ",(0,s.kt)("a",{parentName:"li",href:"#getamountsin"},"getAmountsIn"),".")),(0,s.kt)("h2",{id:"getamountsout"},"getAmountsOut"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-solidity"},"function getAmountsOut(uint amountIn, address[] memory path) internal view returns (uint[] memory amounts);\n")),(0,s.kt)("p",null,"Given an ",(0,s.kt)("em",{parentName:"p"},"input")," asset amount and an array of token addresses, calculates all subsequent maximum ",(0,s.kt)("em",{parentName:"p"},"output")," token amounts by calling ",(0,s.kt)("a",{parentName:"p",href:"#getreserves"},"getReserves")," for each pair of token addresses in the path in turn, and using these to call ",(0,s.kt)("a",{parentName:"p",href:"#getamountout"},"getAmountOut"),"."),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Useful for calculating optimal token amounts before calling ",(0,s.kt)(p,{to:"/docs/v2/smart-contracts/pair#swap-1",mdxType:"Link"},"swap"),".")),(0,s.kt)("h2",{id:"getamountsin"},"getAmountsIn"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-solidity"},"function getAmountsIn(uint amountOut, address[] memory path) internal view returns (uint[] memory amounts);\n")),(0,s.kt)("p",null,"Given an ",(0,s.kt)("em",{parentName:"p"},"output")," asset amount and an array of token addresses, calculates all preceding minimum ",(0,s.kt)("em",{parentName:"p"},"input")," token amounts by calling ",(0,s.kt)("a",{parentName:"p",href:"#getreserves"},"getReserves")," for each pair of token addresses in the path in turn, and using these to call ",(0,s.kt)("a",{parentName:"p",href:"#getamountin"},"getAmountIn"),"."),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Useful for calculating optimal token amounts before calling ",(0,s.kt)(p,{to:"/docs/v2/smart-contracts/pair#swap-1",mdxType:"Link"},"swap"),".")))}k.isMDXComponent=!0}}]);